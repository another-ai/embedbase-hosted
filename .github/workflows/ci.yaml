# This workflow will do a clean install of dependencies, cache/restore them, build the source code and run tests across different versions of python

name: Unit Tests

on:
  push:
    branches: [main]
    paths:
      - 'middlewares/**'
  pull_request:
    branches: [main]
    paths:
      - 'middlewares/**'
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install virtualenv
          make install

      - name: Read EMBEDBASE_TEST_CONFIG JSON secret and write it to config.yaml
        env:
          EMBEDBASE_TEST_CONFIG: ${{ secrets.EMBEDBASE_TEST_CONFIG }}
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq
          chmod +x yq
          echo $EMBEDBASE_TEST_CONFIG | yq -P > config.yaml

      - name: Run tests
        run: make test

      - id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY_PROD }}"

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Get the version
        id: get_version
        run: echo "VERSION=$(sed -n 's/.*image:.*:\(.*\)/\1/p' service.prod.yaml)" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            gcr.io/${{ env.PROJECT_ID }}/embedbase-hosted:latest-dev

      - name: Deploy to Cloud Run dev
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          metadata: service.dev.yaml
          project_id: ${{ env.PROJECT_ID }}
          region: us-central1
          tag: ${{ env.VERSION }}

